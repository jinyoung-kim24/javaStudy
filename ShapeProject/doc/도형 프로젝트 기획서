# 도형 프로젝트 기획서(Shape 요구사항정의서; SRS-S/W Requirements Specification)
> 점부터 시작하는 기초도형(기하학)들을 데이터 표현하는 
 객체지향형 "라이브러리"를 개발하는 프로젝트
 
 ## 요구사항 (requirement)
 1. (누가) 점 개념을 도형으로 표현할 수 있다.
 2. 선 개념을 도형으로 표현할 수 있다.
 3. 삼각형 개념을 도형으로 표현할 수 있다.(평면; 선들이 서로 연결되어 막힌 루프영역으로...)
 	- 삼각형, 정삼각형, 이등변삼각형, 직각삼각형, ....
 4. 사각형 개념을 도형으로 표현할 수 있다.
 	- 사각형, 정사각형, 평행사변형, 마름모, 사다리꼴, 직사각형, ...
 5. 오각형 개념을 도형으로 표현할 수 있다. (N각형..)
 6. 모든 도형들은 길이 (거리), 넓이(면적), 각도, .. 둥을 측정(measure)할 수 있다. 
 7. 모든 도형들은 고유의 이름을 가질 수 있다. (이름표,태그) 
 8. 모든 도형들은 고유 컬러를 표현할 수 있다. (RGB)
 9. 모든 도형들은 웹, 혹은 데스크탑의 GUI 영역에 그래픽 형태로 출력할 수 있다. 
 10. 모든 도형들을 파일로 저장, 3차원 입체 표현, 물리적 시뮬레이션... 칠교?
 
 ## 패키지 구조
 +shape
  shape.MyShape(상수전용 모음 클래스)
  shape.main
  shape.main.TestMain (도형 클래스들 테스트 main()함수)
  shape.basic
  shape.basic.MyPoint
  shape.d1
  shape.d1.MyLine
  shape.d1.MyCurve?
  shape.d2
  shape.d2.tri // 삼각형들..(세모)
  shape.d2.tri.MyTriangle
  shape.d2.tri.MyIsoTriangle
  shape.d2.tri.MyequiTriangle
  shape.d2.tri.MyrightTriangle
  shape.d2.rect // 사각류
  shape.d2.round // 원형
  shape.d3
  shape.util
  shape.util.input
  shape.util.gui
  shape.util.output
  shape.util.output.graphic
  shape.util.output.image
  shape.util.output.web
  
 ## 클래스 설계
 
 ### 점 Point 스키마
 > shape.basic.MyPoint 클래스
 > 2차원 좌표계 평면 상의 한 점(특정 위치)으로 좌표값으로 표현(x,y)
 - 가로축 상의 위치 x 정수 int x
 - 세로축 상의 위치 y 정수 int y
 - 점이름태그 문자열          String tag
 - 점의 상태표현으로써의 컬러  String color (RGB 컬러코드 16진법 문자열)      
      나중에는 MyColor 클래스로 표현 가능
 ### 선 Line 스키마
 > shape.d1.MyLine
 > 두 좌표점을 이어주는 선상을 표현 일단 두 점을 잇는 직선만 표현(곡선은 별도로 취급)
 > 벡터 선은 아니며, 시작점이 있고, 끝점이 있음 (시작점 => 끝점)
 - 시작점 위치 점객체 MyPoint sp // start point
 - 끝점 위치 점객체 MyPoint ep // end point
 - 선이름태그 문자열          String tag
 - 선의 상태표현으로써의 컬러  String color (RGB 컬러코드 16진법 문자열)
 - 선의 종류 stroke, border, types... int strokeType
 - 선의 두께 정수형...				   int width
 - 측정: 선객체를 이루는 두 점 사이에 최단거리 (길이) 
 		실수형 수치값 double 

 ### 면 Face/Area 스키마들
 > 직선류 평면들.. 각의 개수에 따라 3개부터 시작..
 > 곡선류 ? 중심점? 원, 타원, ??
 
 ### 삼각형 Triangle 스키마
 > 일반 삼각형, 이등변삼각형, 정삼각형, 직각삼각형
 
 
 ##### MyTriangle 스키마 (일반삼각형)
 > shape.d2.tri.MyTriangle 클래스
 > 2차원 평면상에서 3개의 떨어진 점들로, 혹은 세개의 서로 이어지는 선들로 모두 연결되는 페공간 구성
 - 점(vertex 꼭지점) 3개 MyPoint a, b, c;
 - 선(line 선분) 3개 MyLine ab, bc, ca;
 
 - 삼각형의 이름태그 문자열          String tag
 - 삼각형 내부 영역에 채워진 컬러  String color (RGB 컬러코드 16진법 문자열)
 - 측정: 면적(넓이) double area;
 - 측정: 둘레 (길이 = 모든 선분들의 길이의 총합) double perimeter;
 - 측정: 각도들 (선분과 서분 사이의 내각, degree, radian, 선분 AB와 BC 사이의 내각)
 	double angleAB_BC;
 - 삼각형, 이등변삼각형, 정삼각형, 직각삼각형
 #### MyIsoTriangle 이등변 삼각형( isoselos 구체화 삼각형1)
  > shape.d2.tri.MyIsoTriangle 클래스 (MyTriangle 자식/하위/파생클래스)
  > 2개의 선분(변)의 길이가 동일하다는 제약조건(특성)
  - 자신의 종류를 표현하는 String shapeType "이등변 삼각형"
  
 #### MyEquiTriangle 정삼각형( equilateral 구체화 삼각형2)
  > shape.d2.tri.MyEquiTriangle 클래스
  > 3개의 선분(변)의 길이가 동일하고 3개 내각도 동일함 제약조건 (특성)
  - 자신의 종류를 표현하는 String shapeType "정삼각형"
  
 #### MyRigthTriangle 직각삼각형( 구체화 삼각형3)
  > shape.d2.tri.MyRigthTriangle 클래스
  > 각 하나가 직각 90 PI/2 이면됨 (구체화된 특성)
  - 자신의 종류를 표현하는 String shapeType "직각각형"
  
 ### 사각형 Rectangle 스키마  
  
  
 #### 곡선계열 원 Circle 스키마
 > 원, 타원, 아크(호), 스플라인?, 파동(싸인,코싸인)

//
 #### 원 Circle 스키마
 > Shape.d2.round.MyCircle 
 > 임의의 한 점에서 직선거리가 동일하게 떨어진 모든 점들을 
	연결한 2차원 평면상의 폐공간
 - 중심점  MyPoint ptCenter
 - 반지름  double radius;
 - 원의 이름태그 문자열 String tag;
 - 원 내부 영역에 채워진 컬러 String color;(RGB 컬러코드 16진법 문자열)
 - 측정: 넓이(면적) double area;
 - 측정: 둘레(길이) double perimeter;

 ## Util 유틸리티 클래스
 > 도형 보조 기능들
 ### 출력 shape.util.output
 > shape.util.output.WebPrint (HTML/canvas)
 















 	